{
  "type": "schema",
  "prefixes": {
    "prefix1": "http://all.example/",
    "a": "http://all.example/",
    "prefix": "http://all.example/",
    "base": "http://all.example/",
    "PREFIX": "http://all.example/",
    "S5": "http://all.example/S5",
    "BaSe": "http://all.example/",
    "virtual": "http://all.example/",
    "closed": "http://all.example/",
    "extra": "http://all.example/",
    "iri": "http://all.example/",
    "bnode": "http://all.example/",
    "literal": "http://all.example/",
    "nonliteral": "http://all.example/",
    "or": "http://all.example/",
    "pattern": "http://all.example/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "startAct": {
    "http://all.example/act1": " START1 ",
    "http://all.example/act2": " START2 "
  },
  "start": "http://all.example/S3",
  "shapes": {
    "_:b0": {
      "type": "shape",
      "expression": {
        "predicate": "http://all.example/p1",
        "type": "tripleConstraint",
        "value": {
          "type": "valueClass"
        }
      }
    },
    "http://all.example/S1": {
      "type": "shape",
      "expression": {
        "type": "group",
        "expressions": [
          {
            "type": "tripleConstraint",
            "predicate": "http://all.example/p1",
            "value": { "type": "valueClass" }
          },
          {
            "type": "tripleConstraint",
            "predicate": "http://all.example/p2",
            "value": { "type": "valueClass" }
          },
          {
            "type": "tripleConstraint",
            "predicate": "http://all.example/p3",
            "value": { "type": "valueClass" }
          }
        ]
      },
      "extra": [ "http://all.example/p1", "http://all.example/p2", "http://all.example/p3" ]
    },
    "http://all.example/S2": {
      "type": "shape",
      "expression": {
        "type": "group",
        "expressions": [
	  { "type": "tripleConstraint", "predicate": "http://all.example/p1", "value": { "type": "valueClass" } },
	  { "type": "tripleConstraint", "predicate": "http://all.example/p2", "value": { "type": "valueClass" } },
	  { "type": "tripleConstraint", "predicate": "http://all.example/p3", "value": { "type": "valueClass" } }
	]
      },
      "extra": [ "http://all.example/p1", "http://all.example/p2", "http://all.example/p3" ]
    },
    "http://all.example/S3": {
      "type": "shape",
      "virtual": true,
      "expression": {
        "type": "group",
        "expressions": [
	  { "type": "tripleConstraint", "predicate": "http://all.example/a", "value": { "type": "valueClass" } },
	  { "type": "tripleConstraint", "predicate": "http://all.example/prefix", "value": { "type": "valueClass", "datatype": "http://all.example/dt", "length": 2 }, "min":0, "max":1 },
	  { "type": "oneOf",
	    "expressions": [
	      { "type": "someOf",
		"expressions": [
		  { "type": "group",
		    "expressions": [
		      { "type": "tripleConstraint", "predicate": "http://all.example/base", "value": { "type": "valueClass", "nodeKind": "iri" }, "min":0 },
		      { "type": "tripleConstraint", "predicate": "http://all.example/PREFIX", "value": { "type": "valueClass", "nodeKind": "iri", "pattern": "^http://", "length": 5 }, "min":1 },
		      { "id": "http://all.example/id1", "type": "tripleConstraint", "predicate": "http://all.example/BaSe", "value": { "type": "valueClass", "reference": "http://all.example/S5" }, "min":2, "max":2 }
		      ]
		  },
		  { "type": "tripleConstraint", "predicate": "http://all.example/virtual", "value": { "type": "valueClass", "nodeKind": "nonliteral", "reference": "http://all.example/S5" }, "min":2 }
		]
	      },
	      { "type": "tripleConstraint", "predicate": "http://all.example/closed", "value": { "type": "valueClass", "nodeKind": "bnode", "reference": { "type": "or", "disjuncts": ["http://all.example/S5", "http://all.example/S5"]}, "minlength": 2, "maxlength": 4 }, "min":2 },
	      { "type": "group",
		"expressions": [
		  { "type": "oneOf",
		    "expressions": [
		      { "type": "group",
			"expressions": [
			  { "type": "tripleConstraint", "inverse": true, "predicate": "http://all.example/extra", "value": { "type": "valueClass", "reference": "_:b0" },
			    "semAct": { "http://all.example/act1": " code1 " }, "min":1
			  },
			  { "type": "tripleConstraint", "negated": true, "predicate": "http://all.example/iri", "value": { "type": "valueClass", "nodeKind": "literal" },
                            "annotations": [
                              [ "http://a.example/annot1", "\"1\"" ],
                              [ "http://a.example/annot2", "\"2\"" ],
                              [ "http://a.example/annot3", "\"3\"" ]
                            ],
			    "semAct": { "http://all.example/act1": " code1 " }, "min":1
			  }
			]
		      },
		      { "type": "group",
			"expressions": [
			  { "type": "tripleConstraint", "inverse": true, "negated": true, "predicate": "http://all.example/bnode", "value": { "type": "valueClass" },
			    "semAct": { "http://all.example/act1": " code1 " }, "min":1
			  },
			  { "type": "tripleConstraint", "inverse": true, "negated": true, "predicate": "http://all.example/literal", "value": { "type": "valueClass" },
			    "semAct": { "http://all.example/act1": " code1 " }, "min":1
			  }
			]
		      }
		    ]
		  },
		  { "type": "tripleConstraint", "predicate": "http://all.example/nonliteral", "value": { "type": "valueClass", "datatype": "http://www.w3.org/2001/XMLSchema#integer", "mininclusive": 5, "maxinclusive": 5, "totaldigits": 1, "fractiondigits": 1 } }
		]
	      }
	    ]
	  },
	  { "type": "tripleConstraint", "predicate": "http://all.example/or", "value": { "type": "valueClass", "values": [
	    "http://a.example/a1",
            {
              "type": "stemRange",
              "stem": "http://all.example/",
              "exclusions": [
		{ "stem": "http://all.example/a", "type": "stem" },
		"http://all.example/b"
              ]
            }
	  ] } },
	  { "type": "group",
	    "expressions": [
	      { "type": "group",
		"expressions": [
		  { "type": "tripleConstraint", "predicate": "http://all.example/pattern", "value": { "type": "valueClass", "values": [
		    {
		      "type": "stemRange",
		      "stem": { "type": "wildcard" },
		      "exclusions": [
			{ "stem": "http://all.example/a", "type": "stem" },
			"http://all.example/b"
		      ]
		    }
		  ] } }
		],
		"semAct": { "http://all.example/act1": " code1 " }
	      }
	    ],
	    "semAct": { "http://all.example/act2": " code2 " }
	  }
	]
      },
      "extra": [ "http://all.example/a", "http://all.example/prefix", "http://all.example/base" ],
      "inherit": [ "http://all.example/S1" ]
    },
    "http://all.example/S4": {
      "type": "shape",
      "closed": true,
      "inherit": [ "http://all.example/S4", "http://all.example/S2" ]
    },
    "http://all.example/S5": {
      "type": "shape",
      "expression": {
        "include": "http://all.example/S4",
        "type": "include"
      }
    }
  }
}
